This is a fast translation version from Chinese document. Some sentences of the Chinese document are not clear. If you have some problem you can contact Song Luan<song.luan@sv.cmu.edu>, so we can discuss more.

1 Environment Configuration (for Windows)
1.1 Python2.7.3: Download and install Python2.7.3; Add Python executable path to system path
1.2 MySQL5.1: Download and install MySQL5.1; Set username:root password:123; Create an empty database: service_discovery;
1.3 WordNet2.1: Download and install WordNet2.1, Set system path

2. Tips on running:

2.1 Ontology-empowered SVM Categorization:
  Put Pweb dataset under directory /api-09-07/Write
  Run OESVM_Classifier_final3.java under package zn.bs.scs.OESVM, parameter description:
  (Set the domain your want to categorize in method initDomList())
  public static void main(String[] args) {
    doWork("/home/abc/api-09-07/Write", "/home/abc/api-09-07/Categories", 0.4, 0.8, 7200, "/home/abc/api-09-07/Result(OESVM)_7200", 50)
    /*This is entry method of the program, parameters are: Initial Pweb's dataset path, Folder path which contains pre-processed and categorized result based on pre-defined domains dataset, value of alpha for calculating KF-IRF, percentage of training set against pre-defined domains, test set size, result path, the range to determine whether domain ranking stability(for example, TOP50)*/
  }
  Tip: Although you can automatically run the program for many domains, you'd better run one domain each time to get the most accurate interation.

2.2 Traditional SVM Categorization
  Run TSVM_Classifier.java under package zn.bs.scs.TSVM, parameter description:
  (Set the domain you want to categorize in method initDomList())
    doWork("/home/abc/api-09-07/Categories", 0.4, 0.8, 7200, "/home/abc/api-09-07/Result(OESVM)_7200", 50)
    /*This is entry method of the program, parameters are: Initial Pweb's dataset path, the value of alpha for libSVM training, training set's percentage over pre-defined domains, test set size, result path*/

2.3 Calculation of Precision and Recall 
  Run files under package zn.bs.scs.PreRec:
  Step1: Run procedure in TransferResult.java which transfers categorized results to a folder. In fact, this step copies every domains' categorization result, newDomain, to a certain folder, in order to handle together.( This is for processing many domains in one run. For one domain each run, you can directly got o Step2. Copy newDomain manually and name it based on the following requirement)
  
  Step2: Run CalPreAndRecall.java
  public static void main(String[] args) {
    doWorkForTopFolder("/home/abc/api-09-07/RES_FOLDER(travel)", "/home/abc/api-09-07/Categories")
    /*This is entry method for calculating precision and recall, parameters are: Folder path which contains categorization result of many domains, Folder path which contains pre-processed and categorized based on pre-defined domains dataset*/
  
  Tip: the folder containing categorization result includes many subfolders. The subfolders' naming format is: domain's name + (optional suffix). For example, categoriztion result for Travel domain on different test set(in newDomain) can be named as Travel_2000, Travel_5000, Travel_all

2.4 Calculation of Similarity between APIs and Domains:
  Run ApiDomCosSimiCalculater.java in zn.bs.scs.CosineSimi, parameter description:
  public static void main(String[] args) {
    doWork("/home/abc/api-09-07/API_DomSimi/api", "/home/abc/api-09-07/API_DomSimi/domrank", "/home/abc/api-09-07/API_DomSimi/SimiRes");
    /*This is entry method of the program, parameters are: API set to be tested, domain ranklist to be compared(generated by KF-IRF), folder path to put result*/
  }
 
